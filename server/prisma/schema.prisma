generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int       @id @default(autoincrement())
  email            String    @unique
  password         String
  username         String?   @unique
  fullName         String?
  description      String?
  profileImage     String?
  address          String?
  isProfileInfoSet Boolean?  @default(false)
  createAt         DateTime? @default(now())
  no               String?
  listing          Listing[]
  orders           Orders[]
  reviews          Reviews[]
  messagesSent     Message[] @relation("sentMessages")
  messagesReceived Message[] @relation("receivedMessages")
}

model Listing {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  category    String
  stock       Int
  price       Int
  createdAt   DateTime  @default(now())
  images      String[]
  userId      Int
  createdBy   User      @relation(fields: [userId], references: [id])
  orders      Orders[]
  reviews     Reviews[]
}

model Orders {
  id            Int       @id @default(autoincrement())
  createdAt     DateTime  @default(now())
  buyer         User      @relation(fields: [buyerId], references: [id])
  buyerId       Int
  paymentIntent String    @unique
  status        Int       @default(0)
  // 0 = not completed, 1 = completed, 2 = cancelled, 3 = refunded
  listing       Listing   @relation(fields: [listingId], references: [id])
  listingId     Int
  price         Int
  messages      Message[]
}

model Reviews {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  rating     Int
  reviewText String?
  listing    Listing  @relation(fields: [listingId], references: [id])
  listingId  Int
  reviewer   User     @relation(fields: [reviewerId], references: [id])
  reviewerId Int
}

model Message {
  id          Int      @id @default(autoincrement())
  text        String
  createdAt   DateTime @default(now())
  isRead      Boolean  @default(false)
  sender      User     @relation("sentMessages", fields: [senderId], references: [id])
  senderId    Int
  recipient   User     @relation("receivedMessages", fields: [recipientId], references: [id])
  recipientId Int
  order       Orders   @relation(fields: [orderId], references: [id])
  orderId     Int
}

model ListingLog {
  id             Int      @id @default(autoincrement())
  listingId      Int
  createdAt      DateTime @default(now())
  titleOld       String?
  titleNew       String?
  descriptionOld String?
  descriptionNew String?
  categoryOld    String?
  categoryNew    String?
  stockOld       Int?
  stockNew       Int?
  priceOld       Int?
  priceNew       Int?
}
